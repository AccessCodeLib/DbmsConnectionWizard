NDSummary.OnToolTipsLoaded("File:ado/AdodbHandler.cls",{6:"<div class=\"NDToolTip TClass LVisualBasic\"><div class=\"TTSummary\">ADODB data connection methods</div></div>",10:"<div class=\"NDToolTip TProperty LVisualBasic\"><div class=\"TTSummary\">/** &lt;summary&gt; Aktuell eingestellte ADODB-Connction &lt;/summary&gt; &lt;returns&gt;ADODB.Connection&lt;/returns&gt; &lt;remarks&gt; Falls noch keine ADODB-Connection vorhanden ist, wird eine neue ADODB-Verbindung erstellt.&nbsp; Ablauf der Instanzieren: 1. RaiseEvent #ErrorMissingCurrentConnection ... falls keine Connection übergeben wurde: 2. Neue ADODB-Connection auf Basis des OLEDB-Connectionstring erzeugen (Einsatz der Eigenschaft #ConnectionString)</div></div>",42:"<div class=\"NDToolTip TProperty LVisualBasic\"><div class=\"TTSummary\">/** &lt;summary&gt; Übergabe einer ADODB-Connection &lt;/summary&gt; &lt;param name=&quot;NewConnection&quot;&gt;Neue ADODB-Connection&lt;/param&gt; &lt;remarks&gt;&lt;/remarks&gt; **/</div></div>",43:"<div class=\"NDToolTip TProperty LVisualBasic\"><div class=\"TTSummary\">/** &lt;summary&gt; OLEDB-Connectionstring &lt;/summary&gt; &lt;returns&gt;OLEDB-Connectionstring&lt;/returns&gt; &lt;remarks&gt;&lt;/remarks&gt; **/</div></div>",44:"<div class=\"NDToolTip TProperty LVisualBasic\"><div class=\"TTSummary\">/** &lt;summary&gt; OLEDB-Connectionstring &lt;/summary&gt; &lt;param name=&quot;Value&quot;&gt;OLEDB-Connectionstring für den Verbindungaufbau&lt;/param&gt; &lt;remarks&gt;&lt;/remarks&gt; **/</div></div>",46:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype46\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function Execute(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal CommandText&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">String,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">Optional ByRef RecordsAffected&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">Long,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal Options&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">ADODB.ExecuteOptionEnum</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">-1</span></td></tr></table></td><td class=\"PAfterParameters\">) As ADODB.Recordset</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; Sql-Anweisung ausführen &lt;/summary&gt; &lt;param name=&quot;CommandText&quot;&gt;SQL-Anweisung&lt;/param&gt; &lt;param name=&quot;RecordsAffected&quot;&gt;ByRef-Parameter zur Rückgabe der Anzahl der von der Execute-Anweisung betroffenen Datensätze&lt;/param&gt; &lt;param name=&quot;Options&quot;&gt;zusätztliche Optionen der ADODB.Connection-Execute-Methode&lt;/param&gt; &lt;returns&gt;ADODB.Recordset&lt;/returns&gt; &lt;remarks&gt;Kapselung der ADODB.Connection.Execute-Methode (Parameter werden 1:1 weitergereicht)&lt;/remarks&gt; **/</div></div>",47:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype47\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function ExecuteCommand(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal CmdText&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">String,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">ByVal CmdType&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">ADODB.CommandTypeEnum,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal CmdParamDefs&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">Variant,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">Optional ByRef RecordsAffected&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">Long,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal Options&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">Long</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">-1</span></td></tr></table></td><td class=\"PAfterParameters\">) As ADODB.Recordset</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; Sql-Anweisung mittels ADODB.Command ausführen &lt;/summary&gt; &lt;param name=&quot;CmdText&quot;&gt;ADODB.CommandText-Wert&lt;/param&gt; &lt;param name=&quot;CmdType&quot;&gt;ADODB.CommandType-Wert&lt;/param&gt; &lt;param name=&quot;commandParamDefs&quot;&gt;2-dimensionales Parameter-Array (Array(n,1) ... x(n,0) = Parametername, x(n,1) = Parameterwert)&lt;/param&gt; &lt;param name=&quot;RecordsAffected&quot;&gt;ByRef-Parameter zur Rückgabe der Anzahl der von der Execute-Anweisung betroffenen Datensätze&lt;/param&gt; &lt;param name=&quot;Options&quot;&gt;zusätztliche Optionen der ADODB.Connection-Execute-Methode&lt;/param&gt; &lt;returns&gt;ADODB.Recordset&lt;/returns&gt; &lt;remarks&gt;Mit dieser Variante kann sehr einfach SQL-Injection vermieden werden, da die Parameter nicht direkt in der SQL-Anweisung eingebaut sind und somit ein Parameterwert (der z. B. von einer Benutzereingabe stammt) keine SQL-Anweisung einschleusen kann.&lt;/remarks&gt; **/</div></div>",48:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype48\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function OpenRecordset(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal Source&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">String,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal CursorType&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">ADODB.CursorTypeEnum</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">ADODB.CursorTypeEnum.adOpenForwardOnly,</td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal LockType&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">ADODB.LockTypeEnum</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">ADODB.LockTypeEnum.adLockReadOnly,</td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal CursorLocation&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">ADODB.CursorLocationEnum</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">-1</span>,</td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal DisconnectedRecordset&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">Boolean</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">False</td></tr></table></td><td class=\"PAfterParameters\">) As ADODB.Recordset</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; OpenRecordset &lt;/summary&gt; &lt;param name=&quot;Source&quot;&gt;Datenquelle (z.B. SQL-Anweisung)&lt;/param&gt; &lt;param name=&quot;CursorType&quot;&gt;ADODB.CursorTypeEnum-Wert&lt;/param&gt; &lt;param name=&quot;LockType&quot;&gt;ADODB.LockTypeEnum-Wert&lt;/param&gt; &lt;param name=&quot;CursorLocation&quot;&gt;ADODB.CursorLocationEnum-Wert&lt;/param&gt; &lt;param name=&quot;DisconnectedRecordset&quot;&gt;True: Verbindung nach Öffnen des Recordset kappen ... verbindungsloses Recordset&lt;/param&gt; &lt;returns&gt;ADODB.Recordset&lt;/returns&gt; &lt;remarks&gt;&lt;/remarks&gt; **/</div></div>",49:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype49\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function OpenRecordsetCommandParam(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal CmdText&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">String,</td></tr><tr><td class=\"PModifierQualifier first\">ByVal CmdType&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">ADODB.CommandTypeEnum,</td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal commandParamDefs&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">Variant</td></tr></table></td><td class=\"PAfterParameters\">) As ADODB.Recordset</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; Recocordset mittels ADODB.Command öffnen &lt;/summary&gt; &lt;param name=&quot;CmdText&quot;&gt;ADODB.CommandText-Wert&lt;/param&gt; &lt;param name=&quot;CmdType&quot;&gt;ADODB.CommandType-Wert&lt;/param&gt; &lt;param name=&quot;commandParamDefs&quot;&gt;2-dimensionales Parameter-Array (Array(n,1) ... x(n,0) = Parametername, x(n,0) = Parameterwert) ... abwechselnd Paramtername und Parameterwert einstellen&lt;/param&gt; &lt;returns&gt;ADODB.Recordset&lt;/returns&gt; &lt;remarks&gt;Mit dieser Variante kann sehr einfach SQL-Injection vermieden werden, da die Parameter nicht direkt in der SQL-Anweisung eingebaut sind und somit ein Parameterwert (der z. B. von einer Benutzereingabe stammt) keine SQL-Anweisung einschleusen kann.&lt;/remarks&gt; **/</div></div>",50:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype50\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function LookupSql(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal SqlText&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">String,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal Index&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">Variant</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span>&amp;,</td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal ValueIfNull&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">Variant</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">Null</td></tr></table></td><td class=\"PAfterParameters\">) As Variant</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; Lookup-Recordset-Ersatzfunktion für Übergabe einer vollständigen SQL-Anweisung &lt;/summary&gt; &lt;param name=&quot;SqlText&quot;&gt;SQL-Anweisung&lt;/param&gt; &lt;param name=&quot;Index&quot;&gt;Feldauswahl, falls nicht das erste Feld des Recordsets zurückgeliefert werden soll. Die Index-Übergabe erfolgt analaog ADODB.Recordset.Fields(index)&lt;/param&gt; &lt;param name=&quot;ValueIfNull&quot;&gt;Rückgabewert bei fehlendem Datensatz oder NULL-Feldwert (Standard: Null&lt;/param&gt; &lt;returns&gt;Variant (NULL, falls SQL-Anweisung keinen Datensatz liefert.)&lt;/returns&gt; &lt;remarks&gt;Die SQL-Anweisung ist im SQL-Dialekt des betroffenen DBMS zu schreiben.&lt;/remarks&gt; **/</div></div>",51:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype51\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function Lookup(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal Expr&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">String,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">ByVal Domain&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">String,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal Criteria&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">Variant,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal ValueIfNull&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">Variant</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">Null</td></tr></table></td><td class=\"PAfterParameters\">) As Variant</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; Lookup-Recordset-Ersatzfunktion &lt;/summary&gt; &lt;param name=&quot;Expr&quot;&gt;Feldname oder berechneter Ausdruck (Select-Teil)&lt;/param&gt; &lt;param name=&quot;Domain&quot;&gt;Tabelle, Abfrage oder SQL-Ausdruck für Sub-Abfrage (FROM-Teil)&lt;/param&gt; &lt;param name=&quot;Criteria&quot;&gt;Filter (WHERE-Teil)&lt;/param&gt; &lt;returns&gt;Variant&lt;/returns&gt; &lt;remarks&gt;&lt;/remarks&gt; **/</div></div>",52:"<div class=\"NDToolTip TFunction LVisualBasic\"><div class=\"TTSummary\">/** &lt;summary&gt; DCount-Recordset-Ersatzfunktion &lt;/summary&gt; &lt;param name=&quot;Expr&quot;&gt;Feldname oder berechneter Ausdruck (Select-Teil)&lt;/param&gt; &lt;param name=&quot;Domain&quot;&gt;Tabelle, Abfrage oder SQL-Ausdruck für Sub-Abfrage (FROM-Teil)&lt;/param&gt; &lt;param name=&quot;Criteria&quot;&gt;Filter (WHERE-Teil)&lt;/param&gt; &lt;returns&gt;Long&lt;/returns&gt; &lt;remarks&gt;&lt;/remarks&gt; **/</div></div>",53:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype53\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function Max(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal Expr&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">String,</td></tr><tr><td class=\"PModifierQualifier first\">ByVal Domain&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">String,</td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal Criteria&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">Variant</td></tr></table></td><td class=\"PAfterParameters\">) As Variant</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; DMax-Recordset-Ersatzfunktion &lt;/summary&gt; &lt;param name=&quot;Expr&quot;&gt;Feldname oder berechneter Ausdruck (Select-Teil)&lt;/param&gt; &lt;param name=&quot;Domain&quot;&gt;Tabelle, Abfrage oder SQL-Ausdruck für Sub-Abfrage (FROM-Teil)&lt;/param&gt; &lt;param name=&quot;Criteria&quot;&gt;Filter (WHERE-Teil)&lt;/param&gt; &lt;returns&gt;Variant&lt;/returns&gt; &lt;remarks&gt;&lt;/remarks&gt; **/</div></div>",54:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype54\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function Min(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal Expr&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">String,</td></tr><tr><td class=\"PModifierQualifier first\">ByVal Domain&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">String,</td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal Criteria&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">Variant</td></tr></table></td><td class=\"PAfterParameters\">) As Variant</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; DMin-Recordset-Ersatzfunktion &lt;/summary&gt; &lt;param name=&quot;Expr&quot;&gt;Feldname oder berechneter Ausdruck (Select-Teil)&lt;/param&gt; &lt;param name=&quot;Domain&quot;&gt;Tabelle, Abfrage oder SQL-Ausdruck für Sub-Abfrage (FROM-Teil)&lt;/param&gt; &lt;param name=&quot;Criteria&quot;&gt;Filter (WHERE-Teil)&lt;/param&gt; &lt;returns&gt;Variant&lt;/returns&gt; &lt;remarks&gt;&lt;/remarks&gt; **/</div></div>",55:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype55\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function Sum(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal Expr&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">String,</td></tr><tr><td class=\"PModifierQualifier first\">ByVal Domain&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">String,</td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal Criteria&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">Variant</td></tr></table></td><td class=\"PAfterParameters\">) As Variant</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; DSum-Recordset-Ersatzfunktion &lt;/summary&gt; &lt;param name=&quot;Expr&quot;&gt;Feldname oder berechneter Ausdruck (Select-Teil)&lt;/param&gt; &lt;param name=&quot;Domain&quot;&gt;Tabelle, Abfrage oder SQL-Ausdruck für Sub-Abfrage (FROM-Teil)&lt;/param&gt; &lt;param name=&quot;Criteria&quot;&gt;Filter (WHERE-Teil)&lt;/param&gt; &lt;returns&gt;Variant&lt;/returns&gt; &lt;remarks&gt;&lt;/remarks&gt; **/</div></div>",56:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype56\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function InsertIdentityReturn(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal InsertSql&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">String,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal IdentityTable&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">String</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">vbNullString</td></tr></table></td><td class=\"PAfterParameters\">) As Variant</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; Insert-SQL-Anweisung ausführen und letzten Identity-Wert (Autowert) zurückgeben &lt;/summary&gt; &lt;param name=&quot;InsertSQL&quot;&gt;Insert-SQL-Anweisung (INSERT ...)&lt;/param&gt; &lt;returns&gt;Identity-Wert oder NULL falls kein Datensatz angefügt wurde&lt;/returns&gt; &lt;remarks&gt;Funktioniert für Jet erst ab Jet 4.0 (Access 2000), IdentityTable ist nur für MSSQL anwendbar, unter MySQL gibt es die Funktion IDENT_CURRENT nicht.&lt;/remarks&gt; **/</div></div>"});