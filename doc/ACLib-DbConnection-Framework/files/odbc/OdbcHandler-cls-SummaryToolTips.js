NDSummary.OnToolTipsLoaded("File:odbc/OdbcHandler.cls",{103:"<div class=\"NDToolTip TClass LVisualBasic\"><div class=\"TTSummary\">/** \\author&nbsp; Josef Poetzl &lt;summary&gt; ODBC-Zugriffsmethoden &lt;/summary&gt; &lt;remarks&gt;&lt;/remarks&gt; \\ingroup data_odbc **/</div></div>",105:"<div class=\"NDToolTip TProperty LVisualBasic\"><div class=\"TTSummary\">/** &lt;summary&gt; DAO.Database-Instanz des Frontends bzw. jener Jet-DB in der die Pass-Through-Abfragen erstellt werden sollen &lt;/summary&gt; &lt;returns&gt;DAO.Database&lt;/returns&gt; &lt;remarks&gt;&lt;/remarks&gt; **/</div></div>",106:"<div class=\"NDToolTip TProperty LVisualBasic\"><div class=\"TTSummary\">/** &lt;summary&gt; DAO.Database-Instanz des Frontends bzw. jener Jet-DB in der die Pass-Through-Abfragen erstellt werden sollen &lt;/summary&gt; &lt;param name=&quot;NewCurrentDb&quot;&gt;DAO.Database-Referenz die für CurrentDb verwendet werden soll&lt;/param&gt; &lt;returns&gt;DAO.Database&lt;/returns&gt; &lt;remarks&gt;&lt;/remarks&gt; **/</div></div>",107:"<div class=\"NDToolTip TProperty LVisualBasic\"><div class=\"TTSummary\">/** &lt;summary&gt; Database-Referenz zum Backend &lt;/summary&gt; &lt;returns&gt;DAO.Database&lt;/returns&gt; &lt;remarks&gt;DAO.Database wird über DBEngine.OpenDatabase(&quot;&quot;, dbDriverComplete, False, &lt;see cref=OdbcHandler#ConnectionString&gt;ConnectionString&lt;/see&gt;) geöffnet.&lt;/remarks&gt; **/</div></div>",108:"<div class=\"NDToolTip TProperty LVisualBasic\"><div class=\"TTSummary\">/** &lt;summary&gt; Database-Referenz zum Backend &lt;/summary&gt; &lt;param name=&quot;NewCurrentDbBE&quot;&gt;DAO.Database-Referenz auf eine bereits geöffnete Datanbank&lt;/param&gt; &lt;returns&gt;DAO.Database&lt;/returns&gt; &lt;remarks&gt;Diese Set-Property-Prozedur ist normalerweise nicht erforderlich, da die Datanbank überlicherweise mittels angegebenen ODBC-Connectionstring geöffnet wird.&lt;/remarks&gt; **/</div></div>",109:"<div class=\"NDToolTip TProperty LVisualBasic\"><div class=\"TTSummary\">/** &lt;summary&gt; ODBC-ConnectionString &lt;/summary&gt; &lt;returns&gt;String&lt;/returns&gt; &lt;remarks&gt;&lt;/remarks&gt; **/</div></div>",110:"<div class=\"NDToolTip TProperty LVisualBasic\"><div class=\"TTSummary\">/** &lt;summary&gt; ODBC-ConnectionString &lt;/summary&gt; &lt;param name=&quot;Value&quot;&gt;ODBC-Connectionstring für Verbindungsaufbau&lt;/param&gt; &lt;remarks&gt;Beispiel: &quot;ODBC;DRIVER={SQL Server};DATABASE=testdb;SERVER=(local)\\SQL2005;Trusted_Connection=Yes;&quot;&lt;/remarks&gt; **/</div></div>",112:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype112\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function OpenRecordset(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal Source&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">String,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal RecordsetType&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">DAO.RecordsetTypeEnum</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">dbOpenForwardOnly,</td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal RecordsetOptions&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">DAO.RecordsetOptionEnum</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">DAO.RecordsetOptionEnum.dbSeeChanges,</td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal LockEdit&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">DAO.LockTypeEnum</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">DAO.LockTypeEnum.dbOptimistic</td></tr></table></td><td class=\"PAfterParameters\">) As DAO.Recordset</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; openRecordset &lt;/summary&gt; &lt;param name=&quot;Quelle&quot;&gt;SQL-Anweisung&lt;/param&gt; &lt;param name=&quot;RecordsetType&quot;&gt;DAO.RecordsetTypeEnum (Standard: dbOpenForwardOnly)&lt;/param&gt; &lt;param name=&quot;RecordsetOptions&quot;&gt;DAO.RecordsetOptionEnum (Standard: dbSeeChanges)&lt;/param&gt; &lt;param name=&quot;LockEdit&quot;&gt;DAO.LockTypeEnum (Standard: dbOptimistic)&lt;/param&gt; &lt;returns&gt;DAO.Recordset&lt;/returns&gt; &lt;remarks&gt;&lt;/remarks&gt; **/</div></div>",113:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype113\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function OpenRecordsetPT(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal Source&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">String,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal RecordsetType&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">DAO.RecordsetTypeEnum</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">dbOpenForwardOnly,</td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal RecordsetOptions&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">DAO.RecordsetOptionEnum</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">DAO.RecordsetOptionEnum.dbSeeChanges Or DAO.RecordsetOptionEnum.dbSQLPassThrough,</td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal LockEdit&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">DAO.LockTypeEnum</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">DAO.LockTypeEnum.dbOptimistic</td></tr></table></td><td class=\"PAfterParameters\">) As DAO.Recordset</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; OpenRecordsetPT &lt;/summary&gt; &lt;param name=&quot;Source&quot;&gt;SQL-Anweisung&lt;/param&gt; &lt;param name=&quot;RecordsetType&quot;&gt;DAO.RecordsetTypeEnum (Standard: dbOpenForwardOnly)&lt;/param&gt; &lt;param name=&quot;RecordsetOptions&quot;&gt;DAO.RecordsetOptionEnum (Standard: dbSeeChanges+dbSQLPassThrough)&lt;/param&gt; &lt;param name=&quot;LockEdit&quot;&gt;DAO.LockTypeEnum (Standard: dbOptimistic)&lt;/param&gt; &lt;returns&gt;DAO.Recordset&lt;/returns&gt; &lt;remarks&gt;&lt;/remarks&gt; **/</div></div>",114:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype114\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function Execute(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal CommandText&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">String,</td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal Options&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">DAO.RecordsetOptionEnum</td></tr></table></td><td class=\"PAfterParameters\">) As Long</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; DAO.Execute-Anweisung über #CurrentDbBE &lt;/summary&gt; &lt;param name=&quot;CommandText&quot;&gt;SQL-Anweisung im Jet-SQL-Dialekt&lt;/param&gt; &lt;param name=&quot;Options&quot;&gt;Werte von RecordsetOptionEnum analog DAO.Database.Execute&lt;/param&gt; &lt;returns&gt;Long (Anzahl der betroffenen Datensätze)&lt;/returns&gt; **/</div></div>",115:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype115\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function ExecutePT(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal CommandText&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">String,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal Options&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">DAO.RecordsetOptionEnum</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">DAO.RecordsetOptionEnum.dbSQLPassThrough</td></tr></table></td><td class=\"PAfterParameters\">) As Long</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; Execute-Anweisung über eine Pass-Through-Abfrage.&nbsp; &lt;/summary&gt; &lt;param name=&quot;CommandText&quot;&gt;SQL-Anweisung im SQL-Dialekt des DBMS&lt;/param&gt; &lt;param name=&quot;Options&quot;&gt;Werte von RecordsetOptionEnum analog DAO.CreateQueryDef.Execute&lt;/param&gt; &lt;returns&gt;Long (Anzahl der betroffenen Datensätze)&lt;/returns&gt; **/</div></div>",116:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype116\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function LookupSql(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal SqlText&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">String,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal Index&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">Variant</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span>&amp;,</td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal ValueIfNull&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">Variant</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">Null</td></tr></table></td><td class=\"PAfterParameters\">) As Variant</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; Lookup-Recordset-Ersatzfunktion für die Übergabe einer kompletten SQL-Anweisung &lt;/summary&gt; &lt;param name=&quot;SqlText&quot;&gt;SQL-Anweisung&lt;/param&gt; &lt;param name=&quot;Index&quot;&gt;Feldauswahl, falls nicht das erste Feld des Recordsets zurückgegeben werden soll&lt;/param&gt; &lt;param name=&quot;ValueIfNull&quot;&gt;Rückgabewert bei fehlendem Datensatz oder NULL-Feldwert (Standard: Null&lt;/param&gt; &lt;returns&gt;Variant&lt;/returns&gt; &lt;remarks&gt;&lt;/remarks&gt; **/</div></div>",117:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype117\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function LookupSqlPT(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal SqlText&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">String,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal Index&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">Variant</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span>&amp;,</td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal ValueIfNull&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">Variant</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">Null</td></tr></table></td><td class=\"PAfterParameters\">) As Variant</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; Lookup-Recordset-Ersatzfunktion für die Übergabe einer kompletten SQL-Anweisung &lt;/summary&gt; &lt;param name=&quot;SqlText&quot;&gt;SQL-Anweisung&lt;/param&gt; &lt;param name=&quot;Index&quot;&gt;Feldauswahl, falls nicht das erste Feld des Recordsets zurückgegeben werden soll&lt;/param&gt; &lt;param name=&quot;ValueIfNull&quot;&gt;Rückgabewert bei fehlendem Datensatz oder NULL-Feldwert (Standard: Null&lt;/param&gt; &lt;returns&gt;Variant&lt;/returns&gt; &lt;remarks&gt;&lt;/remarks&gt; **/</div></div>",118:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype118\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function Lookup(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal Expr&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">String,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">ByVal Domain&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">String,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal Criteria&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">Variant,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal ValueIfNull&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">Variant</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">Null</td></tr></table></td><td class=\"PAfterParameters\">) As Variant</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; Lookup-Recordset-Ersatzfunktion &lt;/summary&gt; &lt;param name=&quot;Expr&quot;&gt;Feldname oder berechneter Ausdruck (Select-Teil)&lt;/param&gt; &lt;param name=&quot;Domain&quot;&gt;Tabelle, Abfrage oder SQL-Ausdruck für Sub-Abfrage (FROM-Teil)&lt;/param&gt; &lt;param name=&quot;Criteria&quot;&gt;Filter (WHERE-Teil)&lt;/param&gt; &lt;returns&gt;Variant&lt;/returns&gt; &lt;remarks&gt;&lt;/remarks&gt; **/</div></div>",170:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype170\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function Count(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal Expr&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">String,</td></tr><tr><td class=\"PModifierQualifier first\">ByVal Domain&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">String,</td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal Criteria&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">Variant</td></tr></table></td><td class=\"PAfterParameters\">) As Variant</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; DCount-Recordset-Ersatzfunktion &lt;/summary&gt; &lt;param name=&quot;Expr&quot;&gt;Feldname oder berechneter Ausdruck (Select-Teil)&lt;/param&gt; &lt;param name=&quot;Domain&quot;&gt;Tabelle, Abfrage oder SQL-Ausdruck für Sub-Abfrage (FROM-Teil)&lt;/param&gt; &lt;param name=&quot;Criteria&quot;&gt;Filter (WHERE-Teil)&lt;/param&gt; &lt;returns&gt;Long&lt;/returns&gt; &lt;remarks&gt;&lt;/remarks&gt; **/</div></div>",171:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype171\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function Max(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal Expr&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">String,</td></tr><tr><td class=\"PModifierQualifier first\">ByVal Domain&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">String,</td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal Criteria&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">Variant</td></tr></table></td><td class=\"PAfterParameters\">) As Variant</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; DMax-Recordset-Ersatzfunktion &lt;/summary&gt; &lt;param name=&quot;Expr&quot;&gt;Feldname oder berechneter Ausdruck (Select-Teil)&lt;/param&gt; &lt;param name=&quot;Domain&quot;&gt;Tabelle, Abfrage oder SQL-Ausdruck für Sub-Abfrage (FROM-Teil)&lt;/param&gt; &lt;param name=&quot;Criteria&quot;&gt;Filter (WHERE-Teil)&lt;/param&gt; &lt;returns&gt;Variant&lt;/returns&gt; &lt;remarks&gt;&lt;/remarks&gt; **/</div></div>",172:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype172\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function Min(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal Expr&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">String,</td></tr><tr><td class=\"PModifierQualifier first\">ByVal Domain&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">String,</td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal Criteria&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">Variant</td></tr></table></td><td class=\"PAfterParameters\">) As Variant</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; DMin-Recordset-Ersatzfunktion &lt;/summary&gt; &lt;param name=&quot;Expr&quot;&gt;Feldname oder berechneter Ausdruck (Select-Teil)&lt;/param&gt; &lt;param name=&quot;Domain&quot;&gt;Tabelle, Abfrage oder SQL-Ausdruck für Sub-Abfrage (FROM-Teil)&lt;/param&gt; &lt;param name=&quot;Criteria&quot;&gt;Filter (WHERE-Teil)&lt;/param&gt; &lt;returns&gt;Variant&lt;/returns&gt; &lt;remarks&gt;&lt;/remarks&gt; **/</div></div>",173:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype173\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function Sum(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal Expr&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">String,</td></tr><tr><td class=\"PModifierQualifier first\">ByVal Domain&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">String,</td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal Criteria&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">Variant</td></tr></table></td><td class=\"PAfterParameters\">) As Variant</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; DSum-Recordset-Ersatzfunktion &lt;/summary&gt; &lt;param name=&quot;Expr&quot;&gt;Feldname oder berechneter Ausdruck (Select-Teil)&lt;/param&gt; &lt;param name=&quot;Domain&quot;&gt;Tabelle, Abfrage oder SQL-Ausdruck für Sub-Abfrage (FROM-Teil)&lt;/param&gt; &lt;param name=&quot;Criteria&quot;&gt;Filter (WHERE-Teil)&lt;/param&gt; &lt;returns&gt;Variant&lt;/returns&gt; &lt;remarks&gt;&lt;/remarks&gt; **/</div></div>",174:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype174\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function InsertIdentityReturn(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal InsertSql&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName last\">String</td></tr></table></td><td class=\"PAfterParameters\">) As Variant</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; Insert-SQL-Anweisung ausführen und letzten Identity-Wert (Autowert) zurückgeben &lt;/summary&gt; &lt;param name=&quot;InsertSQL&quot;&gt;Insert-SQL-Anweisung (INSERT ...)&lt;/param&gt; &lt;returns&gt;Identity-Wert oder NULL falls kein Datensatz angefügt wurde&lt;/returns&gt; &lt;remarks&gt;Funktioniert erst ab Jet 4.0 (Access 2000) und ist vom DBMS abhängig. Bei MySQL-Tabellen wird z. B. 0 zurückgegeben&lt;/remarks&gt; **/</div></div>",175:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype175\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Sub LinkTable(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal SourceTableName&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">String,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal LinkedTableName&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">String</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">vbNullString,</td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal SavePWD&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">Boolean</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">False,</td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal RemoveSchemaName&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">Boolean</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">True</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; Backend-Tabelle im Access-Frontend verknüpfen &lt;/summary&gt; &lt;param name=&quot;SourceTableName&quot;&gt;Tabelle im Backend&lt;/param&gt; &lt;param name=&quot;LinkedTableName&quot;&gt;Tabelle im Frontend&lt;/param&gt; &lt;param name=&quot;SavePWD&quot;&gt;ODBC-Passwort in Tabellenverknüpfung speichern&lt;/param&gt; &lt;param name=&quot;RemoveSchemaName&quot;&gt;Schema-Kennung entfernen&lt;/param&gt; &lt;remarks&gt;Sollten eine 2-geteilte Tabellenkennung wie &quot;dbo.Tabelle123&quot; im BE vorliegen und  bRemoveSchemaName auf false gesetzt sein, wird der Punkt durch &quot;_&quot; ersetzt.&lt;/remarks&gt; **/</div></div>",176:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype176\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function RelinkTables(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">Optional ByVal SavePWD&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">Boolean</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">False,</td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal EventPeriod&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">Long</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span></td></tr></table></td><td class=\"PAfterParameters\">) As Long</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; RelinkTables &lt;/summary&gt; &lt;param name=&quot;SavePWD&quot;&gt;ODBC-Passwort in Tabellenverknüpfung speichern&lt;/param&gt; &lt;param name=&quot;EventPeriod&quot;&gt;Hilfsparamter für Wertübergabe: Anzahl der Verknüpften Elemente für DbObjectRelinked-Ereignisaufruf&lt;/param&gt; &lt;returns&gt;Long (Anzahl der verknüpften Tabellen)&lt;/returns&gt; &lt;remarks&gt; &lt;/remarks&gt; **/</div></div>",179:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype179\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function RelinkTable(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal LinkedTableName&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">String,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal SavePWD&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">Boolean</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">False</td></tr></table></td><td class=\"PAfterParameters\">) As Boolean</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; Verküpfte Tabelle mit möglicher Änderung der Server-Daten neu verknüpfen &lt;/summary&gt; &lt;param name=&quot;LinkedTableName&quot;&gt;Tabelle im Frontend&lt;/param&gt; &lt;param name=&quot;SavePWD&quot;&gt;ODBC-Passwort in Tabellenverknüpfung speichern&lt;/param&gt; &lt;returns&gt;Boolean&lt;/returns&gt; &lt;remarks&gt;Die TableDef-Eigenschaften SourceTableName wird nicht geändert&lt;/remarks&gt; **/</div></div>",180:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype180\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function RelinkPassThroughQueries(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">Optional ByVal SavePWD&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">Boolean</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">False,</td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal EventPeriod&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">Long</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span></td></tr></table></td><td class=\"PAfterParameters\">) As Long</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; Alle Pass-Through-Abfragen neu verknüpfen &lt;/summary&gt; &lt;param name=&quot;SavePWD&quot;&gt;ODBC-Passwort in QueryDef speichern&lt;/param&gt; &lt;param name=&quot;EventPeriod&quot;&gt;Hilfsparamter für Wertübergabe: Anzahl der Verknüpften Elemente für DbObjectRelinked-Ereignisaufruf&lt;/param&gt; &lt;returns&gt;Long (Anzahl der verknüpften Abfragen)&lt;/returns&gt; &lt;remarks&gt; &lt;/remarks&gt; **/</div></div>",181:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype181\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function RelinkPassThroughQuery(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">ByVal QueryName&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">String,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal SavePWD&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">Boolean</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">False</td></tr></table></td><td class=\"PAfterParameters\">) As Boolean</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; Pass-Through-Abfrage neu verknüpfen &lt;/summary&gt; &lt;param name=&quot;QueryName&quot;&gt;Abfragename im Frontend&lt;/param&gt; &lt;param name=&quot;SavePWD&quot;&gt;ODBC-Passwort in QueryDef speichern&lt;/param&gt; &lt;remarks&gt;Mit ConnectionString kann vermieden werden, dass Benutzer u. Passwort gespeichert werden.&lt;/remarks&gt; **/</div></div>",182:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype182\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function RelinkTablesAndQueries(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">Optional ByVal SavePWD&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">Boolean</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">False,</td></tr><tr><td class=\"PModifierQualifier first\">Optional ByVal EventPeriod&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">Long</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span></td></tr></table></td><td class=\"PAfterParameters\">) As Long</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; Alle verknüpften Tabellen und Pass-Through-Abfragen neu verknüpfen &lt;/summary&gt; &lt;param name=&quot;SavePWD&quot;&gt;ODBC-Passwort in Tabellenverknüpfung bzw. QueryDef speichern&lt;/param&gt; &lt;param name=&quot;EventPeriod&quot;&gt;Hilfsparamter für Wertübergabe: Anzahl der Verknüpften Elemente für DbObjectRelinked-Ereignisaufruf&lt;/param&gt; &lt;returns&gt;Long (Anzahl der verknüpften Tabellen und Abfragen)&lt;/returns&gt; &lt;remarks&gt; Je nach Einstellung von EventPeriod wird das Ereignis #DbObjectRelinked ausgelöst (0 = kein Ereignisaufruf, 1 = nach jedem Element Ereignis auslösen, 5 nach jedem 5. Element Ereignis auslösen,...).&nbsp; &lt;/remarks&gt; **/</div></div>",183:"<div class=\"NDToolTip TFunction LVisualBasic\"><div id=\"NDPrototype183\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">Public Function DeleteOdbcTableDefs(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PModifierQualifier first\">Optional ByVal EventPeriod&nbsp;</td><td class=\"PType\">As&nbsp;</td><td class=\"PName\">Long</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">0</span></td></tr></table></td><td class=\"PAfterParameters\">) As Long</td></tr></table></div></div><div class=\"TTSummary\">/** &lt;summary&gt; Alle verknüpften Tabelle im Frontend löschen. (Hat keine Auswirkung auf die Backend-Tabellen.)&nbsp; &lt;/summary&gt; &lt;param name=&quot;lEventCounter&quot;&gt;Hilfsparamter für Wertübergabe: Anzahl der gelöschen Elemente für DbObjectDeleted-Ereignisaufruf&lt;/param&gt; &lt;returns&gt;Long (Anzahl der gelöschten Tabellen)&lt;/returns&gt; &lt;remarks&gt; Je nach Einstellung von lEventCounter wird das Ereignis #DbObjectDeleted ausgelöst (0 = kein Ereignisaufruf, 1 = nach jedem Element Ereignis auslösen, 5 nach jedem 5. Element Ereignis auslösen,...).&nbsp; &lt;/remarks&gt; **/</div></div>"});